{"version":3,"sources":["PIAFButton.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/subDays/index.js","DetailJour.js"],"names":["NotImplementedYetPIAFButton","children","props","useDisclosure","isOpen","onOpen","onClose","btnRef","React","useRef","Fragment","ref","onClick","placement","finalFocusRef","mt","variant","mr","addDays","dirtyDate","dirtyAmount","arguments","length","TypeError","date","toDate","amount","toInteger","setDate","getDate","subDays","dateOptions","locale","fr","Horaires","horaires","debut","fin","formatHeure","heure","format","parseISO","Badge","Poste","number","poste","Box","py","Heading","fontSize","nom","piaffeur","nomAffichage","Stack","isInline","justify","Text","flex","telephone","Link","href","replace","substr","Icon","name","email","title","notes","PIAFButton","mb","Creneaux","creneaux","spacing","map","creneau","index","key","p","shadow","borderWidth","postes","DetailJour","useParams","currentDate","Date","useQuery","query","variables","response","fetching","textAlign","Spinner","error","message","planning","data","planningDuJour","currentDateObj","parse","Flex","justifyContent","alignItems","as","ReactRouterLink","to","size","labOuvert","Alert","status"],"mappings":"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","file":"static/js/8.b698364b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport {\n  Text,\n  Button,\n  useDisclosure,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter\n} from \"@chakra-ui/core\";\n\nconst NotImplementedYetPIAFButton = ({ children, ...props }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const btnRef = React.useRef();\n\n  return (\n    <React.Fragment>\n      <Button {...props} ref={btnRef} onClick={onOpen}>\n        {children}\n      </Button>\n\n      <Drawer\n        isOpen={isOpen}\n        placement=\"right\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>Fonctionnalité non disponible</DrawerHeader>\n\n          <DrawerBody>\n            <Text>Cette fonctionnalité n'est pas encore disponible.</Text>\n            <Text>\n              Pour vous positionner sur un créneau pour votre PIAF, merci de\n              vous rendre sur le Planning du Lab (comme historiquement).\n            </Text>\n\n            <Text mt={4}>\n              Nous espérons qu'il sera bientôt possible de tout faire depuis\n              cette page.\n            </Text>\n          </DrawerBody>\n\n          <DrawerFooter>\n            <Button variant=\"outline\" mr={3} onClick={onClose}>\n              Fermer\n            </Button>\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default NotImplementedYetPIAFButton;\n","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * var result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\n\nexport default function subDays(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import React from \"react\";\nimport { useParams, Link as ReactRouterLink } from \"react-router-dom\";\nimport {\n  Box,\n  Heading,\n  Link,\n  Icon,\n  Spinner,\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n  Text,\n  Stack,\n  Badge,\n  Flex\n} from \"@chakra-ui/core\";\nimport { useQuery } from \"urql\";\nimport { parse, format, parseISO, addDays, subDays } from \"date-fns\";\nimport { fr } from \"date-fns/locale\";\n\nimport PIAFButton from \"./PIAFButton\";\n\nconst dateOptions = { locale: fr };\nconst dateFormat = \"yyyy-MM-dd\";\n\nconst PLANNING_JOUR = `\n  query PlanningJour($date: Date!) {\n    planningDuJour(date: $date) {\n     date\n     labOuvert\n     ... on JourOuverture {\n       creneaux {\n         nom\n         postes {\n           nom\n           horaires {\n             debut\n             fin\n           }\n           piaffeur {\n             nom\n             prenom\n             nomAffichage\n             telephone\n             email\n           }\n           notes\n         }\n       }\n     }\n   }\n  }\n`;\n\nconst Horaires = ({ horaires: { debut, fin }, ...props }) => {\n  const formatHeure = heure =>\n    format(parseISO(heure, dateOptions), \"HH'h'mm\", dateOptions);\n\n  return (\n    <Badge variant=\"solid\" {...props}>\n      {formatHeure(debut)}-{formatHeure(fin)}\n    </Badge>\n  );\n};\n\nconst Poste = ({ poste }) => {\n  const asTelUrl = number =>\n    number && `tel:+33${number.replace(/[^\\d]/g, \"\").substr(1)}`;\n\n  return (\n    <Box py={2}>\n      <Heading fontSize=\"l\">\n        <Horaires horaires={poste.horaires} mr={2} />\n        {poste.nom}\n      </Heading>\n      {poste.piaffeur.nomAffichage && (\n        <Stack isInline justify=\"space-between\">\n          <Text flex=\"1\">{poste.piaffeur.nomAffichage}</Text>\n          {poste.piaffeur.telephone ? (\n            <Link flex=\"1\" href={asTelUrl(poste.piaffeur.telephone)}>\n              <Icon name=\"phone\" mr={2} />\n              {poste.piaffeur.telephone}\n            </Link>\n          ) : (\n            <Text flex=\"1\">\n              <Icon name=\"phone\" mr={2} /> N/A\n            </Text>\n          )}\n          {poste.piaffeur.email ? (\n            <Link\n              href={`mailto:${poste.piaffeur.email}`}\n              title={poste.piaffeur.email}\n            >\n              <Icon name=\"email\" />\n            </Link>\n          ) : (\n            <Text>N/A</Text>\n          )}\n        </Stack>\n      )}\n      {poste.notes && <Text>Note : {poste.notes}</Text>}\n\n      {!poste.piaffeur.nomAffichage && (\n        <PIAFButton mt={2} mb={4}>\n          Se positionner sur cette PIAF\n        </PIAFButton>\n      )}\n    </Box>\n  );\n};\n\nconst Creneaux = ({ creneaux }) => (\n  <Stack spacing={8}>\n    {creneaux.map((creneau, index) => (\n      <Box key={index} p={5} shadow=\"md\" borderWidth=\"1px\">\n        <Heading fontSize=\"xl\">{creneau.nom}</Heading>\n        <Stack mt={4} spacing={4}>\n          {creneau.postes.map((poste, index) => (\n            <Poste poste={poste} key={index} />\n          ))}\n        </Stack>\n      </Box>\n    ))}\n  </Stack>\n);\n\nconst DetailJour = () => {\n  const { date } = useParams();\n  const currentDate =\n    date === \"aujourdhui\" ? format(new Date(), dateFormat, dateOptions) : date;\n\n  const [response] = useQuery({\n    query: PLANNING_JOUR,\n    variables: {\n      date: currentDate\n    }\n  });\n\n  if (response.fetching) {\n    return (\n      <Box textAlign=\"center\">\n        <Spinner />\n        <Box>Récupération des informations de la journée…</Box>\n      </Box>\n    );\n  } else if (response.error) {\n    return <span>{response.error.message}</span>;\n  }\n\n  const planning = response.data.planningDuJour;\n  const currentDateObj = parse(\n    currentDate,\n    dateFormat,\n    new Date(),\n    dateOptions\n  );\n  return (\n    <Box>\n      <Box mb={4}>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Link\n            as={ReactRouterLink}\n            to={format(subDays(currentDateObj, 1), dateFormat)}\n            title=\"Voir le jour précédent\"\n            p={4}\n          >\n            <Icon name=\"arrow-left\" />\n          </Link>\n          <Heading size=\"2xl\">\n            {format(\n              parse(planning.date, dateFormat, new Date(), dateOptions),\n              \"dd/MM/yyyy\",\n              dateOptions\n            )}\n          </Heading>\n          <Link\n            as={ReactRouterLink}\n            to={format(addDays(currentDateObj, 1), dateFormat)}\n            title=\"Voir le jour suivant\"\n            p={4}\n          >\n            <Icon name=\"arrow-right\" />\n          </Link>\n        </Flex>\n\n        <Link as={ReactRouterLink} to=\"/\">\n          <Icon name=\"arrow-back\" mr={2} />\n          Retourner à l'accueil\n        </Link>\n      </Box>\n\n      {planning.labOuvert && <Creneaux creneaux={planning.creneaux} />}\n      {!planning.labOuvert && (\n        <Alert status=\"error\" variant=\"left-accent\">\n          <AlertIcon />\n          <AlertTitle mr={2}>Lab fermé !</AlertTitle>\n          <AlertDescription>\n            Le Lab est fermé à cette date. Veuillez vérifiez la date saisie.\n          </AlertDescription>\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default DetailJour;\n"],"sourceRoot":""}