{"version":3,"sources":["../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/locale/fr/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/fr/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/fr/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/fr/_lib/localize/index.js","../node_modules/date-fns/esm/locale/fr/index.js","../node_modules/date-fns/esm/locale/fr/_lib/match/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/@chakra-ui/core/dist/es/Badge/styles.js","../node_modules/@chakra-ui/core/dist/es/Badge/index.js"],"names":["toDate","argument","arguments","length","TypeError","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","toInteger","dirtyNumber","number","Number","isNaN","Math","ceil","floor","startOfUTCWeek","dirtyDate","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","date","day","getUTCDay","diff","setUTCDate","getUTCDate","setUTCHours","startOfUTCISOWeek","getUTCWeekYear","year","getUTCFullYear","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","setUTCFullYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","MILLISECONDS_IN_MINUTE","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","getTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","buildFormatLongFn","args","width","String","defaultWidth","formats","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchPatternFn","dirtyString","string","matchResult","match","matchPattern","matchedString","parseResult","parsePattern","value","valueCallback","rest","slice","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","array","predicate","key","findIndex","pattern","test","object","hasOwnProperty","findKey","dateLongFormatter","formatLong","timeLongFormatter","time","longFormatters","p","P","dateTimeFormat","datePattern","timePattern","dateTime","replace","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","token","indexOf","isProtectedWeekYearToken","throwProtectedError","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","code","formatDistance","count","result","addSuffix","comparison","formatRelative","_date","_baseDate","_options","parseInt","any","index","subMilliseconds","dirtyAmount","timestamp","amount","addMilliseconds","MILLISECONDS_IN_WEEK","getUTCWeek","firstWeek","startOfUTCWeekYear","round","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","assign","target","dirtyObject","property","setUTCDay","dirtyDay","MILLISECONDS_IN_HOUR","MILLISECONDS_IN_SECOND","numericPatterns","dayOfYear","week","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","parseNumericPattern","parseTimezonePattern","sign","hours","minutes","seconds","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","parsers","G","priority","parse","set","flags","incompatibleTokens","y","isTwoDigitYear","unit","validate","normalizedTwoDigitYear","Y","R","_match","_flags","firstWeekOfYear","u","Q","setUTCMonth","q","M","L","w","dirtyWeek","setUTCWeek","I","dirtyISOWeek","isoWeek","setUTCISOWeek","d","isLeapYear","getUTCMonth","D","E","e","wholeWeekDays","c","i","setUTCISODay","a","b","B","h","isPM","getUTCHours","H","K","k","m","setUTCMinutes","s","setUTCSeconds","S","pow","setUTCMilliseconds","X","timestampIsSet","x","t","_token","T","TIMEZONE_UNIT_PRIORITY","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dirtyDateString","dirtyFormatString","dirtyBackupDate","dateString","formatString","defaultLocale","subFnOptions","setters","dateToSystemTimezone","tokens","map","substring","firstCharacter","longFormatter","join","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","Array","isArray","incompatibleToken","_i","usedToken","concat","fullToken","push","uniquePrioritySetters","setter","sort","filter","reverse","setterArray","utcDate","convertedDate","setFullYear","setHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","addLeadingZeros","targetLength","output","abs","formatters","signedYear","dayPeriodEnumValue","toUpperCase","numberOfDigits","milliseconds","MILLISECONDS_IN_DAY","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","lightFormatters","signedWeekYear","weekYear","difference","getUTCDayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","_originalDate","O","z","originalDate","format","dirtyFormatStr","formatStr","isValid","formatterOptions","formatter","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","variantProps","props","variant","colorMode","_ref","colors","theme","color","_color","darkModeBg","addOpacity","light","bg","get","dark","solidStyle","_ref2","generateAlphaColors","subtleStyle","_ref3","darkModeColor","boxShadow","outlineStyle","useBadgeStyle","_props","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","useTheme","useColorMode","Badge","forwardRef","ref","_ref$variantColor","variantColor","_ref$variant","_objectWithoutPropertiesLoose","badgeStyleProps","jsx","Box","_extends","display","px","textTransform","fontSize","borderRadius","fontWeight","whiteSpace","verticalAlign","displayName"],"mappings":"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","file":"static/js/0.dd121a4f.chunk.js","sourcesContent":["/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","var MILLISECONDS_IN_MINUTE = 60000;\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var millisecondsPartOfTimezoneOffset = date.getTime() % MILLISECONDS_IN_MINUTE;\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function (date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function (date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function (string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function (date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function (string, token, match, options) {\n      var valueCallback = function (value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function (string, token, match, _options) {\n      var valueCallback = function (value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function (date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function (date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function (date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function (string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function (_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function (string, token, _match, _options) {\n      var valueCallback = function (value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function (date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function (string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function (date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function (string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function (_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `backupDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `backupDate` which works as a context of parsing.\n *\n * `backupDate` must be passed for correct work of the function.\n * If you're not sure which `backupDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `backupDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `backupDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} backupDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyBackupDate, dirtyOptions) {\n  if (arguments.length < 3) {\n    throw new TypeError('3 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyBackupDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).reverse();\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyBackupDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'moins d’une seconde',\n    other: 'moins de {{count}} secondes'\n  },\n  xSeconds: {\n    one: '1 seconde',\n    other: '{{count}} secondes'\n  },\n  halfAMinute: '30 secondes',\n  lessThanXMinutes: {\n    one: 'moins d’une minute',\n    other: 'moins de {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'environ 1 heure',\n    other: 'environ {{count}} heures'\n  },\n  xHours: {\n    one: '1 heure',\n    other: '{{count}} heures'\n  },\n  xDays: {\n    one: '1 jour',\n    other: '{{count}} jours'\n  },\n  aboutXMonths: {\n    one: 'environ 1 mois',\n    other: 'environ {{count}} mois'\n  },\n  xMonths: {\n    one: '1 mois',\n    other: '{{count}} mois'\n  },\n  aboutXYears: {\n    one: 'environ 1 an',\n    other: 'environ {{count}} ans'\n  },\n  xYears: {\n    one: '1 an',\n    other: '{{count}} ans'\n  },\n  overXYears: {\n    one: 'plus d’un an',\n    other: 'plus de {{count}} ans'\n  },\n  almostXYears: {\n    one: 'presqu’un an',\n    other: 'presque {{count}} ans'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'dans ' + result;\n    } else {\n      return 'il y a ' + result;\n    }\n  }\n\n  return result;\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE d MMMM y',\n  long: 'd MMMM y',\n  medium: 'd MMM y',\n  short: 'dd/MM/y'\n};\nvar timeFormats = {\n  full: 'HH:mm:ss zzzz',\n  long: 'HH:mm:ss z',\n  medium: 'HH:mm:ss',\n  short: 'HH:mm'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'à' {{time}}\",\n  long: \"{{date}} 'à' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"eeee 'dernier à' p\",\n  yesterday: \"'hier à' p\",\n  today: \"'aujourd’hui à' p\",\n  tomorrow: \"'demain à' p'\",\n  nextWeek: \"eeee 'prochain à' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['av. J.-C', 'ap. J.-C'],\n  abbreviated: ['av. J.-C', 'ap. J.-C'],\n  wide: ['avant Jésus-Christ', 'après Jésus-Christ']\n};\nvar quarterValues = {\n  narrow: ['T1', 'T2', 'T3', 'T4'],\n  abbreviated: ['1er trim.', '2ème trim.', '3ème trim.', '4ème trim.'],\n  wide: ['1er trimestre', '2ème trimestre', '3ème trimestre', '4ème trimestre']\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['janv.', 'févr.', 'mars', 'avr.', 'mai', 'juin', 'juil.', 'août', 'sept.', 'oct.', 'nov.', 'déc.'],\n  wide: ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre']\n};\nvar dayValues = {\n  narrow: ['D', 'L', 'M', 'M', 'J', 'V', 'S'],\n  short: ['di', 'lu', 'ma', 'me', 'je', 've', 'sa'],\n  abbreviated: ['dim.', 'lun.', 'mar.', 'mer.', 'jeu.', 'ven.', 'sam.'],\n  wide: ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'minuit',\n    noon: 'midi',\n    morning: 'mat.',\n    afternoon: 'ap.m.',\n    evening: 'soir',\n    night: 'mat.'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'minuit',\n    noon: 'midi',\n    morning: 'matin',\n    afternoon: 'après-midi',\n    evening: 'soir',\n    night: 'matin'\n  },\n  wide: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'minuit',\n    noon: 'midi',\n    morning: 'du matin',\n    afternoon: 'de l’après-midi',\n    evening: 'du soir',\n    night: 'du matin'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, dirtyOptions) {\n  var number = Number(dirtyNumber);\n  var options = dirtyOptions || {};\n  var unit = String(options.unit);\n  var suffix;\n\n  if (number === 0) {\n    return number;\n  }\n\n  if (unit === 'year' || unit === 'hour' || unit === 'week') {\n    if (number === 1) {\n      suffix = 'ère';\n    } else {\n      suffix = 'ème';\n    }\n  } else {\n    if (number === 1) {\n      suffix = 'er';\n    } else {\n      suffix = 'ème';\n    }\n  }\n\n  return number + suffix;\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function (quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide'\n  })\n};\nexport default localize;","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary French locale.\n * @language French\n * @iso-639-2 fra\n * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}\n * @author François B [@fbonzon]{@link https://github.com/fbonzon}\n */\n\nvar locale = {\n  code: 'fr',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1\n    /* Monday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(ième|ère|ème|er|e)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(av\\.J\\.C|ap\\.J\\.C|ap\\.J\\.-C)/i,\n  abbreviated: /^(av\\.J\\.-C|av\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\n  wide: /^(avant Jésus-Christ|après Jésus-Christ)/i\n};\nvar parseEraPatterns = {\n  any: [/^av/i, /^ap/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^t[1234]/i,\n  wide: /^[1234](er|ème|e)? trimestre/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\\.?/i,\n  wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^av/i, /^ma/i, /^juin/i, /^juil/i, /^ao/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[lmjvsd]/i,\n  short: /^(di|lu|ma|me|je|ve|sa)/i,\n  abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\\.?/i,\n  wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|minuit|midi|mat\\.?|ap\\.?m\\.?|soir|nuit)/i,\n  any: /^([ap]\\.?\\s?m\\.?|du matin|de l'après[-\\s]midi|du soir|de la nuit)/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^min/i,\n    noon: /^mid/i,\n    morning: /mat/i,\n    afternoon: /ap/i,\n    evening: /soir/i,\n    night: /nuit/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function (index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function (date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function (date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function (date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function (date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function (date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function (date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function (date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function (date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function (date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function (date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function (date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function (date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function (date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function (date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function (date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function (date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function (date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  if (arguments.length < 2) {\n    throw new TypeError('2 arguments required, but only ' + arguments.length + ' present');\n  }\n\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  if (arguments.length < 1) {\n    throw new TypeError('1 argument required, but only ' + arguments.length + ' present');\n  }\n\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { addOpacity, generateAlphaColors, get } from \"../theme/colors-utils\";\nimport { useTheme } from \"../ThemeProvider\";\nimport { useColorMode } from \"../ColorModeProvider\";\n\nvar solidStyle = function solidStyle(_ref) {\n  var colors = _ref.theme.colors,\n      color = _ref.color;\n\n  var _color = colors[color] && colors[color][500];\n\n  var darkModeBg = addOpacity(_color, 0.6);\n  return {\n    light: {\n      bg: get(color, 500),\n      color: \"white\"\n    },\n    dark: {\n      bg: darkModeBg,\n      color: \"whiteAlpha.800\"\n    }\n  };\n};\n\nvar subtleStyle = function subtleStyle(_ref2) {\n  var colors = _ref2.theme.colors,\n      color = _ref2.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var alphaColors = generateAlphaColors(_color);\n  var darkModeBg = alphaColors[300];\n  return {\n    light: {\n      bg: get(color, 100),\n      color: get(color, 800)\n    },\n    dark: {\n      bg: darkModeBg,\n      color: get(color, 200)\n    }\n  };\n};\n\nvar outlineStyle = function outlineStyle(_ref3) {\n  var colors = _ref3.theme.colors,\n      color = _ref3.color;\n\n  var _color = colors[color] && colors[color][200];\n\n  var darkModeColor = addOpacity(_color, 0.8);\n  var boxShadowColor = colors[color] && colors[color][500];\n  return {\n    light: {\n      boxShadow: \"inset 0 0 0px 1px \" + boxShadowColor,\n      color: get(color, 500)\n    },\n    dark: {\n      boxShadow: \"inset 0 0 0px 1px \" + darkModeColor,\n      color: darkModeColor\n    }\n  };\n};\n\nvar variantProps = function variantProps(props) {\n  var variant = props.variant,\n      colorMode = props.colorMode;\n\n  switch (variant) {\n    case \"solid\":\n      return solidStyle(props)[colorMode];\n\n    case \"subtle\":\n      return subtleStyle(props)[colorMode];\n\n    case \"outline\":\n      return outlineStyle(props)[colorMode];\n\n    default:\n      return {};\n  }\n};\n\nvar useBadgeStyle = function useBadgeStyle(props) {\n  var theme = useTheme();\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var _props = _objectSpread({}, props, {\n    theme: theme,\n    colorMode: colorMode\n  });\n\n  return variantProps(_props);\n};\n\nexport default useBadgeStyle;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport useBadgeStyle from \"./styles\";\nimport Box from \"../Box\";\nimport { forwardRef } from \"react\";\nvar Badge = forwardRef(function (_ref, ref) {\n  var _ref$variantColor = _ref.variantColor,\n      variantColor = _ref$variantColor === void 0 ? \"gray\" : _ref$variantColor,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"subtle\" : _ref$variant,\n      props = _objectWithoutPropertiesLoose(_ref, [\"variantColor\", \"variant\"]);\n\n  var badgeStyleProps = useBadgeStyle({\n    color: variantColor,\n    variant: variant\n  });\n  return jsx(Box, _extends({\n    ref: ref,\n    display: \"inline-block\",\n    px: 1,\n    textTransform: \"uppercase\",\n    fontSize: \"xs\",\n    borderRadius: \"sm\",\n    fontWeight: \"bold\",\n    whiteSpace: \"nowrap\",\n    verticalAlign: \"middle\"\n  }, badgeStyleProps, props));\n});\nBadge.displayName = \"Badge\";\nexport default Badge;"],"sourceRoot":""}